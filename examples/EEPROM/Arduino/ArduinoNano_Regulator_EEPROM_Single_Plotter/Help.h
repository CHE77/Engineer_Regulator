#if defined(USE_HELPMY)
// Set "Сетеры"
  R.setAuto();      // Устанавливаем (Автоматический Режим)
  
  R.setManual();    // Устанавливаем (Ручной Режим)(Автоматически Состояние на выходи станет Равным Безопасному состояние реле)
  R.setManualON();  // Устанавливаем (Ручной Режим)(Состояние на выходи станет HIGH)
  R.setManualOFF(); // Устанавливаем (Ручной Режим)(Cостояние на выходи станет LOW)
  
  R.setError();         // Устанавливаем (Режим Ошибка) По датчику (в оброботчеке датчика лучши поместить)
  R.setErrorState(LOW); // (bool) Безопасное состояние Логики реле
  
  R.setType(HEATER);    // (uint8_t) Выбираем тип регулятора(HEATER, COOLER)
  R.setRLL(HIGH);       // (bool) Выбираем тип выходного сигнала Уровень Логики Реле. Каким сигналом управляется (HIGH/LOW)
  
  R.setDelta(0.5);      // (float) Устанавливаем Дельта (Гистерезис)
  R.setTempSet(20);     // (float) Устанавливаем Уставку температуры
  R.setTempIn(20);      // (float) Устанавливаем Температура от датчика температуры

  R.setFactorySettings();    // Сброс настроек в заводские
  R.setAllFactorySettings(); // Сбросить настройки всех Экземпляров класса после перезагрузки устройства

// Get "Гетеры"
  R.Alarm();         // (bool) Возвращает Сигнал Аварии (от датчика)
  R.getModeState();  // (uint8_t) Возвращает режим регулятора состояние (Автоматический/Ручной/Ошибка)(AUTOMODE, MANUALMODE, ERRORMODE)
  
  R.getType();  // (uint8_t) Возвращает тип регулятора(HEATER, COOLER)
  R.getRLL();   // (bool) Возвращает тип выходного сигнала Уровень Логики Реле. Каким сигналом управляется (HIGH/LOW)
  
  R.getDelta();    // (float) Возвращает Дельта (Гистерезис)
  R.getTempSet();  // (float) Возвращает Уставку температуры
  R.getTempIn();   // (float) Возвращает Температуру от датчика температуры

  R.getId();     // (uint8_t) ID класса (порядковый номер регулятора)
  R.getCount();  // (uint8_t) Счетчик для ID класса (порядковый номер регулятора)
      
  R.printSet();       // Выводит в Serial все настройки регулятора
  R.printAddr();      // Выводит таблицу Адресов
  R.getEEPROMaddr();  // (uint16_t) Возвращает следующий не занятый адрес в EEPROM
  
  R.OutRelay();       // (bool) Производит вычисления и выдает результат на Реле
  R.OutRelay(17.8);   // (bool) Производит вычисления и выдает результат на Реле (принимает float)
  R.OutState();       // (bool) Производит вычисления и выдает результат Логики
  R.OutState(20.8);   // (bool) Производит вычисления и выдает результат Логики  (принимает float)

#endif USE_HELPMY
