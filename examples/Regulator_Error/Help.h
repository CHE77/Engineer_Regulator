#if defined(USE_HELPMY)
// Set "Сетеры"
  R.setAuto();      // Выбираем (Автоматический Режим)
  
  R.setManual();    // Выбираем (Ручной Режим)(Автоматически Состояние на выходи станет Равным Безопасному состояние реле)
  R.setManualON();  // Выбираем (Ручной Режим)(Состояние на выходи станет HIGH)
  R.setManualOFF(); // Выбираем (Ручной Режим)(Cостояние на выходи станет LOW)
  
  R.setError();         // Выбираем (Ручной Ошибка) По датчику
  R.setErrorState(LOW); // Безопасное состояние логики реле (bool)
  
  R.setType(HEATER);    // Выбираем тип регулятора(HEATER, COOLER)
  R.setRLL(HIGH);       // Выбираем тип выходного сигнала Уровень Логики Реле. Каким сигналом управляется (HIGH/LOW)
  
  R.setDelta(0.5);      // Устанавливаем Дельта (Гистерезис)
  R.setTempSet(20);     // Устанавливаем Уставку температуры
  R.setTempIn(20);      // Устанавливаем Температура от датчика температуры

  R.setFactorySettings();    // Сброс настроек в заводские
  R.setAllFactorySettings(); // (EEPROM) Сбросить настройки всех Экземпляров класса после перезагрузки устройства 

// Get "Гетеры"
  R.Alarm();         // (bool) Возвращает Сигнал Аварии (от датчика)
  R.getModeState();  // (uint8_t) Возвращает режим регулятора состояние (Автоматический/Ручной/Ошибка)(ERRORMODE, MANUALMODE, AUTOMODE)
  
  R.getType();          // (uint8_t) Возвращает тип регулятора(HEATER, COOLER)
  R.getRLL();           // (bool) Возвращает тип выходного сигнала Уровень Логики Реле. Каким сигналом управляется (HIGH/LOW)
  R.getErrorState(); // (bool) Возвращает безопасное состояние логики реле 
  
  R.getDelta();    // (float) Возвращает Дельта (Гистерезис)
  R.getTempSet();  // (float) Возвращает Уставку температуры
  R.getTempIn();   // (float) Возвращает Температуру от датчика температуры

  R.getId();     // (uint8_t) ID класса (порядковый номер регулятора)
  R.getCount();  // (uint8_t) Счетчик для ID класса (порядковый номер регулятора)
      
  R.printSet();       // Выводит в Serial все настройки регулятора
  R.printAddr();      // (EEPROM) Выводит таблицу Адресов
  R.getEEPROMaddr();  // (EEPROM)(uint16_t) Возвращает следующий не занятый адрес в EEPROM
  
  R.OutRelay();            // (bool) Производит вычисления и выдает результат на Реле
  R.OutRelay(17.8);        // (bool) Производит вычисления и выдает результат на Реле
  R.OutState();       // (bool) Производит вычисления и выдает результат Логики
  R.OutState(20.8);   // (bool) Производит вычисления и выдает результат Логики

#endif USE_HELPMY
